<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出 -->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数 -->
<configuration status="INFO">
    <!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
    <!--变量配置 -->
    <Properties>
        <!-- 格式化输出：%date表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度 %msg：日志消息，%n是换行符 -->
        <!-- %logger{36} 表示 Logger 名字最长36个字符 -->
        <property name="LOG_PATTERN"
                  value="%date{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{1.} - %msg%n"/>
        <!-- 定义日志存储的路径 -->
        <property name="FILE_PATH" value="../logs/fountain"/>
        <property name="FILE_NAME" value="apigateway"/>
    </Properties>
    <appenders>
        <console name="Console" target="SYSTEM_OUT">
            <!--输出日志的格式 -->
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <!--控制台只输出level及其以上级别的信息（onMatch），其他的直接拒绝（onMismatch） -->
            <!--<ThresholdFilter level="DEBUG" onMatch="ACCEPT" onMismatch="DENY" /> -->
        </console>
        <!--文件会打印出所有信息，这个log每次运行程序会自动清空，由append属性决定，适合临时测试用 -->
        <!--
        <File name="Filelog" fileName="${FILE_PATH}/${FILE_NAME}.log" append="false">
            <PatternLayout pattern="${LOG_PATTERN}" />
        </File>
        -->
        <!-- 这个会打印出所有的info及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 -->
        <RollingFile name="RollingFileDebug"
                     fileName="${FILE_PATH}/debug/${FILE_NAME}-debug.log"
                     filePattern="${FILE_PATH}/debug/${FILE_NAME}-%d{yyyy-MM-dd}-debug.log.gz"
                     immediateFlush="true">
            <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch） -->
            <ThresholdFilter level="debug" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <Policies>
                <!--interval属性用来指定多久滚动一次，默认是1，频率取决于filePattern时间精确度 -->
                <TimeBasedTriggeringPolicy interval="1" modulate="true"/>
            </Policies>
            <!-- 指定每天的最大压缩包个数，默认7个，超过了会覆盖之前的 -->
            <DefaultRolloverStrategy max="7"/>
        </RollingFile>
        <RollingFile name="RollingFileInfo"
                     fileName="${FILE_PATH}/info/${FILE_NAME}-info.log"
                     filePattern="${FILE_PATH}/info/${FILE_NAME}-%d{yyyy-MM-dd}-info.log.gz"
                     immediateFlush="true">
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <Policies>
                <TimeBasedTriggeringPolicy interval="1" modulate="true"/>
            </Policies>
            <DefaultRolloverStrategy max="7"/>
        </RollingFile>
        <RollingFile name="RollingFileError"
                     fileName="${FILE_PATH}/error/${FILE_NAME}-error.log"
                     filePattern="${FILE_PATH}/error/${FILE_NAME}-%d{yyyy-MM-dd}-error.log.gz"
                     immediateFlush="true">
            <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <Policies>
                <TimeBasedTriggeringPolicy interval="1" modulate="true"/>
            </Policies>
            <DefaultRolloverStrategy max="7"/>
        </RollingFile>
    </appenders>
    <!--Logger节点用来单独指定日志的形式，比如要为指定包下的class指定不同的日志级别等。 -->
    <!--然后定义loggers，只有定义了logger并引入的appender，appender才会生效 -->
    <loggers>
        <!--过滤掉spring和mybatis的一些无用的DEBUG信息 -->
        <!--若是additivity设为false，则 子Logger 只会在自己的appender里输出，而不会在 父Logger 的appender里输出。 -->
        <logger name="org.mybatis" level="debug">
            <!-- <AppenderRef ref="Console" /> -->
        </logger>
        <logger name="org.hibernate" level="error">
            <!-- <AppenderRef ref="Console" />  -->
        </logger>
        <logger name="org.springframework" level="info"></logger>
        <logger name="reactor.netty" level="info"></logger>
        <logger name="io.lettuce.core" level="error"></logger>
        <logger name="io.netty.util" level="info"></logger>
        <logger name="org.mongodb.driver.cluster" level="info"></logger>
        <logger name="org.mongodb.driver.protocol.command" level="info"></logger>
        <logger name="org.redisson" level="info"></logger>
        <logger name="org.springframework.web.reactive.function.client" level="DEBUG"></logger>
        <!-- AsyncRoot - 异步记录日志 - 需要LMAX Disruptor的支持 -->
        <AsyncRoot level="info">
            <appender-ref ref="Console"/>
            <appender-ref ref="RollingFileInfo"/>
            <appender-ref ref="RollingFileDebug"/>
            <appender-ref ref="RollingFileError"/>
        </AsyncRoot>
    </loggers>
</configuration>